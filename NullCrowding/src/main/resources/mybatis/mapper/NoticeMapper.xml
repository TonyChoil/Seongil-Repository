<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamtwo.nullfunding.notice.model.dao.NoticeMapper">

    <resultMap type="NoticeDTO" id="noticeResultMap">
        <id property="noticeNo" column="NOTICE_NO"/>
        <result property="nickName" column="NICKNAME"/>
        <result property="noticeTitle" column="NOTICE_TITLE"/>
        <result property="noticeContent" column="NOTICE_CONTENT"/>
        <result property="uploadDate" column="UPLOAD_DATE"/>
        <result property="readCount" column="READ_COUNT"/>
    </resultMap>

    <!-- 검색한 게시물 개수 -->
    <select id="selectTotalCount" resultType="_int" parameterType="hashMap">
        SELECT
        COUNT(*)
        FROM NOTICE A
        JOIN MEMBER B ON(A.MEMBER_CODE = B.MEM_CODE)
        <where>
            <if test="searchCondition == 'noticeTitle'">
                A.NOTICE_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>

            <if test="searchCondition == 'nickName'">
                B.NICKNAME LIKE '%' || #{ searchValue } || '%'
            </if>
        </where>
    </select>

    <!-- 검색하여 공지사항 조회 -->
    <select id="selectAllNoticeList" resultMap="noticeResultMap">

        SELECT
        A.RNUM
        , A.NOTICE_NO
        , A.NOTICE_TITLE
        , A.NOTICE_CONTENT
        , A.UPLOAD_DATE
        , A.READ_COUNT
        , A.MEMBER_CODE
        , A.NICKNAME
        FROM
        (SELECT
        ROWNUM RNUM
        , B.NOTICE_NO
        , B.NOTICE_TITLE
        , B.NOTICE_CONTENT
        , B.UPLOAD_DATE
        , B.READ_COUNT
        , B.MEMBER_CODE
        , B.NICKNAME
        FROM
        (SELECT C.NOTICE_NO
        , C.NOTICE_TITLE
        , C.NOTICE_CONTENT
        , C.UPLOAD_DATE
        , C.READ_COUNT
        , C.MEMBER_CODE
        , E.NICKNAME
        FROM NOTICE C
        JOIN MEMBER E ON(C.MEMBER_CODE = E.MEM_CODE)
        ORDER BY C.NOTICE_NO DESC) B
        <![CDATA[
                  WHERE ROWNUM <= #{ endRow }
                  ]]>
        ) A
        <where>
            A.RNUM >= #{ startRow }
            <if test="searchCondition == 'noticeTitle'">
                AND  A.NOTICE_TITLE LIKE '%' || #{searchValue} || '%'
            </if>
            <if test="searchCondition == 'nickName'">
                AND  A.NICKNAME LIKE '%' || #{searchValue} || '%'
            </if>
        </where>

    </select>


    <!-- 공지사항 상세보기 조회 -->
    <select id="selectNoticeDetail" resultMap="noticeResultMap">
        SELECT
               A.NOTICE_NO
             , A.MEMBER_CODE
             , B.NICKNAME
             , A.NOTICE_TITLE
             , A.NOTICE_CONTENT
             , A.UPLOAD_DATE
             , A.READ_COUNT
        FROM NOTICE A
                 JOIN MEMBER B ON (A.MEMBER_CODE = B.MEM_CODE)
        WHERE A.NOTICE_NO = #{ no }
    </select>

    <!-- 공지사항 게시글 추가 -->
    <insert id="insertNotice" parameterType="NoticeDTO">
        INSERT
        INTO NOTICE A
        (
             A.NOTICE_NO
           , A.MEMBER_CODE
           , A.NOTICE_TITLE
           , A.NOTICE_CONTENT
           , A.UPLOAD_DATE
           , A.READ_COUNT
        )
        VALUES
        (
               SEQ_NOTICE_NO.NEXTVAL
             , #{ memberCode }
             , #{ noticeTitle }
             , #{ noticeContent }
             , SYSDATE
             , 0
        )
    </insert>

    <!-- 공지사항 게시글 수정 -->
    <update id="updateNotice" parameterType="NoticeDTO">
        UPDATE
              NOTICE A
        SET   A.NOTICE_TITLE = #{ noticeTitle }
            , A.NOTICE_CONTENT = #{ noticeContent }
        WHERE A.NOTICE_NO = #{ noticeNo }
    </update>

    <!-- 공지사항 게시글 삭제 -->
    <delete id="deleteNotice" parameterType="int">
        DELETE
        FROM   NOTICE A
        WHERE  A.NOTICE_NO = #{ no }
    </delete>


    <!-- 조회 시 조회 수 증가 -->
    <update id="incrementNoticeCount" parameterType="int">
        UPDATE
               NOTICE A
        SET A.READ_COUNT = A.READ_COUNT + 1
        WHERE A.NOTICE_NO = #{ no }
    </update>

</mapper>


