CREATE TABLE "MEMBER" (
	"MEM_CODE"	NUMBER		NOT NULL,
	"AUTH_CODE"	NUMBER		NOT NULL,
	"MEM_EMAIL"	VARCHAR2(60)		NOT NULL,
	"MEM_PWD"	VARCHAR2(40)		NOT NULL,
	"IS_ACTIVE"	CHAR(1)	NOT NULL,
	"REGI_DATE"	DATE		NOT NULL,
	"NICKNAME"	VARCHAR2(60)		NOT NULL,
	"RECENTLOGIN"	DATE NOT NULL,
  constraint MEMBER_CHK_ACTIVE check (IS_ACTIVE in ('Y','N')) 
);

COMMENT ON COLUMN "MEMBER"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "MEMBER"."AUTH_CODE" IS '1  / 2';

COMMENT ON COLUMN "MEMBER"."MEM_EMAIL" IS '실질적아이디';

COMMENT ON COLUMN "MEMBER"."MEM_PWD" IS '비밀번호';

COMMENT ON COLUMN "MEMBER"."IS_ACTIVE" IS '(Y->활동중/N->탈퇴)';

COMMENT ON COLUMN "MEMBER"."REGI_DATE" IS '가입일';

COMMENT ON COLUMN "MEMBER"."NICKNAME" IS '닉네임';

COMMENT ON COLUMN "MEMBER"."RECENTLOGIN" IS '최근접속기록';

CREATE TABLE "PERSONALINFO" (
	"MEM_CODE"	NUMBER		NOT NULL,
	"PHONE"	VARCHAR2(20)		NOT NULL,
	"BIRTHDATE"	DATE		NULL,
	"ADDRESS"	VARCHAR2(150)		NULL,
	"GENDER"	CHAR(1)		NOT NULL
  , constraint PERSONALINFO_CHK_GENDER check (GENDER in ('M','F','N')) 
);

COMMENT ON COLUMN "PERSONALINFO"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "PERSONALINFO"."PHONE" IS '회원연락처';

COMMENT ON COLUMN "PERSONALINFO"."BIRTHDATE" IS '회원생일';

COMMENT ON COLUMN "PERSONALINFO"."ADDRESS" IS '회원주소';

COMMENT ON COLUMN "PERSONALINFO"."GENDER" IS '회원성별';

CREATE TABLE "MESSAGES" (
	"MESSAGE_CODE"	NUMBER		NOT NULL,
	"BOX_TYPE"	VARCHAR2(250)		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"TITLE"	VARCHAR2(100)		NOT NULL,
	"RECEIVED_TIME"	DATE		NOT NULL,
	"SENTBY"	VARCHAR2(30)		NOT NULL,
	"CONTENT"	VARCHAR2(2000)		NOT NULL,
	"IS_READ"	CHAR(1)		NOT NULL,
	"IS_DELETED"	CHAR(1)		NOT NULL
  , constraint MESSAGES_CHK_READ check (IS_READ in ('Y','N')) 
  , constraint MESSAGES_CHK_DELETED check (IS_DELETED in ('Y','N')) 
);

COMMENT ON COLUMN "MESSAGES"."MESSAGE_CODE" IS '시퀀스';

COMMENT ON COLUMN "MESSAGES"."BOX_TYPE" IS '1:MEMBER 2:FUNDRAISER 3: 관리자';

COMMENT ON COLUMN "MESSAGES"."TITLE" IS '제목';

COMMENT ON COLUMN "MESSAGES"."RECEIVED_TIME" IS '받은날짜';

COMMENT ON COLUMN "MESSAGES"."SENTBY" IS '보낸사람';

COMMENT ON COLUMN "MESSAGES"."CONTENT" IS '내용';

COMMENT ON COLUMN "MESSAGES"."IS_READ" IS '읽음유무';

COMMENT ON COLUMN "MESSAGES"."IS_DELETED" IS '삭제여부';

CREATE TABLE "NOTICE" (
	"NOTICE_NO"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"CONTENT"	VARCHAR2(500)		NOT NULL,
	"UPLOAD_DATE"	DATE		NOT NULL,
	"READ_COUNT"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NOTICE"."NOTICE_NO" IS '공지글번호';

COMMENT ON COLUMN "NOTICE"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "NOTICE"."CONTENT" IS '공지내용';

COMMENT ON COLUMN "NOTICE"."UPLOAD_DATE" IS '공지작성일';

COMMENT ON COLUMN "NOTICE"."READ_COUNT" IS '조회수';

CREATE TABLE "COMUNITY" (
	"ARTICLE_NO"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMUNITY"."ARTICLE_NO" IS '게시글번호';

COMMENT ON COLUMN "COMUNITY"."MEM_CODE" IS '회원번호(시퀀스)';

CREATE TABLE "COM_COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"ARTICLE_NO"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"CONTENT"	VARCHAR2(500)		NOT NULL,
	"UPLOAD_DATE"	DATE		NOT NULL
);

COMMENT ON COLUMN "COM_COMMENT"."COMMENT_NO" IS '댓글번호(시퀀스)';

COMMENT ON COLUMN "COM_COMMENT"."ARTICLE_NO" IS '게시글번호(시퀀스)';

COMMENT ON COLUMN "COM_COMMENT"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "COM_COMMENT"."CONTENT" IS '내용';

COMMENT ON COLUMN "COM_COMMENT"."UPLOAD_DATE" IS '작성일';

CREATE TABLE "MEMBER_COUPON" (
	"MEM_CODE"	NUMBER		NOT NULL,
	"COU_TYPE"	VARCHAR2(250)		NOT NULL,
	"IS_USED"	CHAR(1)		NOT NULL,
	"USED_DATE"	DATE		NOT NULL,
	"EXPIRE_DATE"	DATE		NOT NULL,
	"IS_EXPIRED"	CHAR(1)		NOT NULL
  , constraint COUPON_CHK_USED check (IS_USED in ('Y','N')) 
  , constraint COUPON_CHK_EXPIRED check (IS_EXPIRED in ('Y','N')) 
);

COMMENT ON COLUMN "MEMBER_COUPON"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "MEMBER_COUPON"."COU_TYPE" IS '쿠폰종류';

COMMENT ON COLUMN "MEMBER_COUPON"."IS_USED" IS '사용유무';

COMMENT ON COLUMN "MEMBER_COUPON"."USED_DATE" IS '사용날짜';

COMMENT ON COLUMN "MEMBER_COUPON"."EXPIRE_DATE" IS '만료기간';

COMMENT ON COLUMN "MEMBER_COUPON"."IS_EXPIRED" IS '만료여부';

CREATE TABLE "COUPON" (
	"COU_TYPE"	VARCHAR2(250)		NOT NULL,
	"COU_NAME"	VARCHAR2(1000)		NOT NULL,
	"COU_VALUE"	NUMBER		NOT NULL,
	"COU_DETAIL"	VARCHAR2(3000)		NULL
);

COMMENT ON COLUMN "COUPON"."COU_TYPE" IS '쿠폰종류';

COMMENT ON COLUMN "COUPON"."COU_NAME" IS '쿠폰명';

COMMENT ON COLUMN "COUPON"."COU_VALUE" IS '할인값';

COMMENT ON COLUMN "COUPON"."COU_DETAIL" IS '쿠폰설명';

CREATE TABLE "FUNDINGPROJECT" (
	"PROJECT_NO"	NUMBER		NOT NULL,
	"RAISER_CODE"	NUMBER		NOT NULL,
	"DESCRIPTION"	VARCHAR2(3500)		NOT NULL,
	"FUNDGOAL"	NUMBER		NOT NULL,
	"REGI_DATE"	DATE		NOT NULL,
	"START_DATE"	DATE		NOT NULL,
	"END_DATE"	DATE		NOT NULL,
	"MEDIA"	VARCHAR2(50)		NULL,
	"IS_FUNDABLE"	CHAR(1)		NOT NULL,
	"LIKES_COUNT"	NUMBER		NOT NULL,
	"READ_COUNT"	NUMBER		NOT NULL
  , constraint FUNDINGPROJECT_CHK_FUNDABLE check (IS_FUNDABLE in ('Y','N')) 
);

COMMENT ON COLUMN "FUNDINGPROJECT"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "FUNDINGPROJECT"."RAISER_CODE" IS 'MEMBER_CODE';

COMMENT ON COLUMN "FUNDINGPROJECT"."DESCRIPTION" IS '프로젝트 설명';

COMMENT ON COLUMN "FUNDINGPROJECT"."FUNDGOAL" IS '목표금액';

COMMENT ON COLUMN "FUNDINGPROJECT"."REGI_DATE" IS '등록날짜';

COMMENT ON COLUMN "FUNDINGPROJECT"."START_DATE" IS '시작날짜';

COMMENT ON COLUMN "FUNDINGPROJECT"."END_DATE" IS '종료날짜';

COMMENT ON COLUMN "FUNDINGPROJECT"."MEDIA" IS '사진/비디오';

COMMENT ON COLUMN "FUNDINGPROJECT"."IS_FUNDABLE" IS '후원가능여부';

COMMENT ON COLUMN "FUNDINGPROJECT"."LIKES_COUNT" IS '좋아요수';

COMMENT ON COLUMN "FUNDINGPROJECT"."READ_COUNT" IS '조회수';

CREATE TABLE "FUNDRAISER" (
	"RAISER_CODE"	NUMBER		NOT NULL,
	"RAI_NICKNAME"	VARCHAR2(60)		NULL,
	"RAI_ADDRESS"	VARCHAR2(250)		NULL,
	"RAI_EMAIL"	VARCHAR2(250)		NULL,
	"RAI_PHONE"	VARCHAR2(30)		NULL
);

COMMENT ON COLUMN "FUNDRAISER"."RAISER_CODE" IS '=MEMBER_CODE';

CREATE TABLE "MESSAGEBOX" (
	"BOX_TYPE"	VARCHAR(1)		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL
  , constraint MESSAGEBOX_CHK_BOXTYPE check (BOX_TYPE in ('1','2','3')) 
);

COMMENT ON COLUMN "MESSAGEBOX"."BOX_TYPE" IS '1:MEMBER 2:FUNDRAISER 3: 관리자';

COMMENT ON COLUMN "MESSAGEBOX"."MEM_CODE" IS '회원번호';

CREATE TABLE "PROJECT_COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"PROJECT_NO"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"CONTENT"	VARCHAR2(500)		NOT NULL,
	"UPLOADDATE"	DATE		NOT NULL,
	"IS_DELETED"	CHAR(1)		NULL
  , constraint PROJECT_COMMENT_CHK_DELETED check (IS_DELETED in ('Y','N'))
);

COMMENT ON COLUMN "PROJECT_COMMENT"."COMMENT_NO" IS '댓글번호';

COMMENT ON COLUMN "PROJECT_COMMENT"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "PROJECT_COMMENT"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "PROJECT_COMMENT"."CONTENT" IS '내용';

COMMENT ON COLUMN "PROJECT_COMMENT"."UPLOADDATE" IS '작성일';

COMMENT ON COLUMN "PROJECT_COMMENT"."IS_DELETED" IS '삭제여부';

CREATE TABLE "PROJECT_MEDIA" (
	"MEDIA_NO"	NUMBER		NOT NULL,
	"PROJECT_NO"	NUMBER		NOT NULL,
	"FILENAME"	VARCHAR2(60)		NULL,
	"HASHNAME"	VARCHAR2(70)		NULL,
	"IS_DELETED"	CHAR(1)		NOT NULL,
	"PLATFORM"	VARCHAR2(50)		NULL,
	"URL"	VARCHAR2(200)		NOT NULL
  , constraint PROJECT_MEDIA_CHK_DELETED check (IS_DELETED in ('Y','N'))
);

COMMENT ON COLUMN "PROJECT_MEDIA"."MEDIA_NO" IS '시퀀스';

COMMENT ON COLUMN "PROJECT_MEDIA"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "PROJECT_MEDIA"."FILENAME" IS '파일이름';

COMMENT ON COLUMN "PROJECT_MEDIA"."HASHNAME" IS '저장이름';

COMMENT ON COLUMN "PROJECT_MEDIA"."IS_DELETED" IS '삭제여부';

COMMENT ON COLUMN "PROJECT_MEDIA"."PLATFORM" IS '비디오타입';

COMMENT ON COLUMN "PROJECT_MEDIA"."URL" IS 'URL타입';

CREATE TABLE "AUTHORITY" (
	"AUTH_CODE"	NUMBER		NOT NULL,
	"AUTH_NAME"	VARCHAR2(255)		NOT NULL
);

COMMENT ON COLUMN "AUTHORITY"."AUTH_CODE" IS '1  / 2';

COMMENT ON COLUMN "AUTHORITY"."AUTH_NAME" IS 'ROLE_ADMIN, / ROLE_MEMBER';

CREATE TABLE "ALARM" (
	"ALARM_CODE"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"CONTENT"	VARCHAR2(500)		NOT NULL,
	"SENT_TIME"	DATE		NOT NULL,
	"IS_READ"	CHAR(1)		NOT NULL
  , constraint ALARM_CHK_DELETED check (IS_READ in ('Y','N'))
);

COMMENT ON COLUMN "ALARM"."ALARM_CODE" IS '알람고유번호(전체발송)';

COMMENT ON COLUMN "ALARM"."MEM_CODE" IS '회원번호(관리자식별)';

COMMENT ON COLUMN "ALARM"."CONTENT" IS '내용';

COMMENT ON COLUMN "ALARM"."SENT_TIME" IS '보낸날짜';

COMMENT ON COLUMN "ALARM"."IS_READ" IS '읽음유무';

CREATE TABLE "APPROVEPROJECT" (
	"MEM_CODE"	NUMBER		NOT NULL,
	"PROJECT_NO"	NUMBER		NOT NULL,
	"PROCESSED_DATE"	DATE		NOT NULL,
	"IS_APPROVED"	CHAR(1)		NOT NULL,
	"DENIED_RESAON"	VARCHAR2(150)		NULL
  , constraint APPROVEPROJECT_CHK_APPROVED check (IS_APPROVED in ('Y','N'))
);

COMMENT ON COLUMN "APPROVEPROJECT"."MEM_CODE" IS '관리자권한땡겨오기';

COMMENT ON COLUMN "APPROVEPROJECT"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "APPROVEPROJECT"."PROCESSED_DATE" IS '처리날짜';

COMMENT ON COLUMN "APPROVEPROJECT"."IS_APPROVED" IS '1:승인 2:반려 3:처리대기(default)';

COMMENT ON COLUMN "APPROVEPROJECT"."DENIED_RESAON" IS '반려사유';

CREATE TABLE "PAYMENT" (
	"PAYMENT_CODE"	VARCHAR2(250)		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"AMOUNT"	NUMBER		NULL,
	"IS_COUPONED"	CHAR(1)		NULL,
	"PAYED_DATE"	DATE		NOT NULL,
	"PAYMENT_TYPE"	CHAR(1)		NOT NULL
  , constraint PAYMENT_CHK_COUPONED check (IS_COUPONED in ('Y','N'))
  , constraint PAYMENT_CHK_PAYTYPE check (PAYMENT_TYPE in ('1','2'))
);

COMMENT ON COLUMN "PAYMENT"."PAYMENT_CODE" IS '결제코드';

COMMENT ON COLUMN "PAYMENT"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "PAYMENT"."AMOUNT" IS '결제(후원)비용';

COMMENT ON COLUMN "PAYMENT"."IS_COUPONED" IS '쿠폰사용유무';

COMMENT ON COLUMN "PAYMENT"."PAYED_DATE" IS '결제일자';

COMMENT ON COLUMN "PAYMENT"."PAYMENT_TYPE" IS '1:프젝   2:멤버쉽';

CREATE TABLE "LIKES" (
	"PROJECT_NO"	NUMBER		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "LIKES"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "LIKES"."MEM_CODE" IS '회원번호(시퀀스)';

CREATE TABLE "PROJECTFUND" (
	"PROJECT_NO"	NUMBER		NOT NULL,
	"PAYMENT_CODE"	VARCHAR2(250)		NOT NULL,
	"RAISED_FUND"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "PROJECTFUND"."PROJECT_NO" IS '프로젝트번호';

COMMENT ON COLUMN "PROJECTFUND"."PAYMENT_CODE" IS '결제코드';

COMMENT ON COLUMN "PROJECTFUND"."RAISED_FUND" IS '현재모금금액';

CREATE TABLE "MES_ATTACHMENT" (
	"ATTACH_NO"	NUMBER		NOT NULL,
	"MESSAGE_CODE"	NUMBER		NOT NULL,
	"FILENAME"	VARCHAR2(250)		NOT NULL,
	"URL"	VARCHAR2(250)		NOT NULL,
	"PATHNAME"	VARCHAR2(250)		NOT NULL
);

COMMENT ON COLUMN "MES_ATTACHMENT"."ATTACH_NO" IS '첨부파일번호';

COMMENT ON COLUMN "MES_ATTACHMENT"."MESSAGE_CODE" IS '시퀀스';

COMMENT ON COLUMN "MES_ATTACHMENT"."FILENAME" IS '파일이름';

COMMENT ON COLUMN "MES_ATTACHMENT"."URL" IS '파일주소';

COMMENT ON COLUMN "MES_ATTACHMENT"."PATHNAME" IS '저장이름';

CREATE TABLE "NOTICE_MEDIA" (
	"MEDIA_NO"	NUMBER		NOT NULL,
	"NOTICE_NO"	NUMBER		NOT NULL,
	"FILENAME"	VARCHAR2(60)		NOT NULL,
	"PATHNAME"	VARCHAR2(100)		NOT NULL,
	"IS_DELETED"	CHAR(1)		NOT NULL,
	"URL"	VARCHAR2(200)		NOT NULL,
	"MEDIATYPE"	CHAR(1)		NOT NULL
  , constraint NOTICE_MEDIA_CHK_DELETED check (IS_DELETED in ('Y','N'))
  , constraint NOTICE_MEDIA_CHK_MEDIATYPE check (MEDIATYPE in ('1','2'))
);

COMMENT ON COLUMN "NOTICE_MEDIA"."MEDIA_NO" IS '영상번호시퀀스';

COMMENT ON COLUMN "NOTICE_MEDIA"."NOTICE_NO" IS '공지글번호';

COMMENT ON COLUMN "NOTICE_MEDIA"."FILENAME" IS '파일이름';

COMMENT ON COLUMN "NOTICE_MEDIA"."PATHNAME" IS '저장이름';

COMMENT ON COLUMN "NOTICE_MEDIA"."IS_DELETED" IS '삭제';

COMMENT ON COLUMN "NOTICE_MEDIA"."URL" IS 'URL주소';

COMMENT ON COLUMN "NOTICE_MEDIA"."MEDIATYPE" IS '1(IMAGE) / 2 (VEDIO)';


CREATE TABLE "APPROVAL_HISTORY" (
	"PAYMENT_CODE"	VARCHAR2(250)		NOT NULL,
	"IS_APPROVED"	CHAR(1)		NOT NULL
	"REFUND_DATE"	DATE		NULL
	, constraint APPROVAL_HISTORY_CHK_APPROVED check (IS_APPROVED in ('Y','N'))
);

COMMENT ON COLUMN "APPROVAL_HISTORY"."PAYMENT_CODE" IS '결제코드';

COMMENT ON COLUMN "APPROVAL_HISTORY"."IS_APPROVED" IS '승인여부';

COMMENT ON COLUMN "APPROVAL_HISTORY"."REFUND_DATE" IS '환불일자(환불시)';

CREATE TABLE "MEMBERSHIP" (
	"MEMBERSHIP_CODE"	VARCHAR(50)		NOT NULL,
	"MEM_CODE"	NUMBER		NOT NULL,
	"START_DATE"	DATE		NOT NULL,
	"END_DATE"	DATE		NOT NULL,
	"IS_VALID"	CHAR(1)		NOT NULL,
	"FIELD"	VARCHAR(255)		NULL
  , constraint MEMBERSHIP_CHK_VALID check (IS_VALID in ('Y','N'))
);

COMMENT ON COLUMN "MEMBERSHIP"."MEM_CODE" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "MEMBERSHIP"."START_DATE" IS '시작일';

COMMENT ON COLUMN "MEMBERSHIP"."END_DATE" IS '만료일';

COMMENT ON COLUMN "MEMBERSHIP"."IS_VALID" IS '적용중여부(Y/N)';

CREATE TABLE "INCOME_PROJECT" (
	"NO"	NUMBER		NOT NULL,
	"INCOME"	NUMBER		NOT NULL,
	"INCOME_DATE"	DATE		NOT NULL,
	"INCOME_TYPE"	VARCHAR2(10)		NOT NULL,
	"PROJECT_NO"	NUMBER		NULL
);

COMMENT ON COLUMN "INCOME_PROJECT"."NO" IS '시퀀스';

COMMENT ON COLUMN "INCOME_PROJECT"."INCOME" IS '수수료(RAISEDFUND%10) / 멤버십결제 AMOUNT';

COMMENT ON COLUMN "INCOME_PROJECT"."INCOME_DATE" IS '최종승인/종료날짜';

COMMENT ON COLUMN "INCOME_PROJECT"."INCOME_TYPE" IS 'PROJECT / MEMBERSHIP';

COMMENT ON COLUMN "INCOME_PROJECT"."PROJECT_NO" IS '프로젝트번호';

CREATE TABLE "SIGNUP_TEMP_EMAIL" (
	"MEM_EMAIL"	varchar2(60)		NOT NULL,
	"CHECK_EMAIL"	varchar2(40)		NOT NULL
);

COMMENT ON COLUMN "SIGNUP_TEMP_EMAIL"."MEM_EMAIL" IS '실질적아이디';

COMMENT ON COLUMN "SIGNUP_TEMP_EMAIL"."CHECK_EMAIL" IS '무작위확인코드';

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEM_CODE"
);

ALTER TABLE "PERSONALINFO" ADD CONSTRAINT "PK_PERSONALINFO" PRIMARY KEY (
	"MEM_CODE"
);

ALTER TABLE "MESSAGES" ADD CONSTRAINT "PK_MESSAGES" PRIMARY KEY (
	"MESSAGE_CODE"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY (
	"NOTICE_NO"
);

ALTER TABLE "COMUNITY" ADD CONSTRAINT "PK_COMUNITY" PRIMARY KEY (
	"ARTICLE_NO"
);

ALTER TABLE "COM_COMMENT" ADD CONSTRAINT "PK_COM_COMMENT" PRIMARY KEY (
	"COMMENT_NO",
	"ARTICLE_NO"
);

ALTER TABLE "MEMBER_COUPON" ADD CONSTRAINT "PK_MEMBER_COUPON" PRIMARY KEY (
	"MEM_CODE",
	"COU_TYPE"
);

ALTER TABLE "COUPON" ADD CONSTRAINT "PK_COUPON" PRIMARY KEY (
	"COU_TYPE"
);

ALTER TABLE "FUNDINGPROJECT" ADD CONSTRAINT "PK_FUNDINGPROJECT" PRIMARY KEY (
	"PROJECT_NO"
);

ALTER TABLE "FUNDRAISER" ADD CONSTRAINT "PK_FUNDRAISER" PRIMARY KEY (
	"RAISER_CODE"
);

ALTER TABLE "MESSAGEBOX" ADD CONSTRAINT "PK_MESSAGEBOX" PRIMARY KEY (
	"BOX_TYPE",
	"MEM_CODE"
);

ALTER TABLE "PROJECT_COMMENT" ADD CONSTRAINT "PK_PROJECT_COMMENT" PRIMARY KEY (
	"COMMENT_NO",
	"PROJECT_NO"
);

ALTER TABLE "PROJECT_MEDIA" ADD CONSTRAINT "PK_PROJECT_MEDIA" PRIMARY KEY (
	"MEDIA_NO",
	"PROJECT_NO"
);

ALTER TABLE "AUTHORITY" ADD CONSTRAINT "PK_AUTHORITY" PRIMARY KEY (
	"AUTH_CODE"
);

ALTER TABLE "ALARM" ADD CONSTRAINT "PK_ALARM" PRIMARY KEY (
	"ALARM_CODE",
	"MEM_CODE"
);

ALTER TABLE "APPROVEPROJECT" ADD CONSTRAINT "PK_APPROVEPROJECT" PRIMARY KEY (
	"MEM_CODE",
	"PROJECT_NO"
);

ALTER TABLE "PAYMENT" ADD CONSTRAINT "PK_PAYMENT" PRIMARY KEY (
	"PAYMENT_CODE"
);

ALTER TABLE "LIKES" ADD CONSTRAINT "PK_LIKES" PRIMARY KEY (
	"PROJECT_NO",
	"MEM_CODE"
);

ALTER TABLE "PROJECTFUND" ADD CONSTRAINT "PK_PROJECTFUND" PRIMARY KEY (
	"PROJECT_NO",
	"PAYMENT_CODE"
);

ALTER TABLE "MES_ATTACHMENT" ADD CONSTRAINT "PK_MES_ATTACHMENT" PRIMARY KEY (
	"ATTACH_NO",
	"MESSAGE_CODE"
);

ALTER TABLE "NOTICE_MEDIA" ADD CONSTRAINT "PK_NOTICE_MEDIA" PRIMARY KEY (
	"MEDIA_NO",
	"NOTICE_NO"
);

ALTER TABLE "APPROVAL_HISTORY" ADD CONSTRAINT "PK_APPROVAL_HISTORY" PRIMARY KEY (
	"PAYMENT_CODE"
);

ALTER TABLE "MEMBERSHIP" ADD CONSTRAINT "PK_MEMBERSHIP" PRIMARY KEY (
	"MEMBERSHIP_CODE"
);

ALTER TABLE "INCOME_PROJECT" ADD CONSTRAINT "PK_INCOME_PROJECT" PRIMARY KEY (
	"NO"
);

ALTER TABLE "SIGNUP_TEMP_EMAIL" ADD CONSTRAINT "PK_SIGNUP_TEMP_EMAIL" PRIMARY KEY (
	"MEM_EMAIL"
);

ALTER TABLE "PERSONALINFO" ADD CONSTRAINT "FK_MEMBER_TO_PERSONALINFO_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "COM_COMMENT" ADD CONSTRAINT "FK_COMUNITY_TO_COM_COMMENT_1" FOREIGN KEY (
	"ARTICLE_NO"
)
REFERENCES "COMUNITY" (
	"ARTICLE_NO"
);

ALTER TABLE "MEMBER_COUPON" ADD CONSTRAINT "FK_MEMBER_TO_MEMBER_COUPON_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "MEMBER_COUPON" ADD CONSTRAINT "FK_COUPON_TO_MEMBER_COUPON_1" FOREIGN KEY (
	"COU_TYPE"
)
REFERENCES "COUPON" (
	"COU_TYPE"
);

ALTER TABLE "FUNDRAISER" ADD CONSTRAINT "FK_MEMBER_TO_FUNDRAISER_1" FOREIGN KEY (
	"RAISER_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "MESSAGEBOX" ADD CONSTRAINT "FK_MEMBER_TO_MESSAGEBOX_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "PROJECT_COMMENT" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_PROJECT_COMMENT_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);

ALTER TABLE "PROJECT_MEDIA" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_PROJECT_MEDIA_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);

ALTER TABLE "ALARM" ADD CONSTRAINT "FK_MEMBER_TO_ALARM_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "APPROVEPROJECT" ADD CONSTRAINT "FK_MEMBER_TO_APPROVEPROJECT_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "APPROVEPROJECT" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_APPROVEPROJECT_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);

ALTER TABLE "LIKES" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_LIKES_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);

ALTER TABLE "LIKES" ADD CONSTRAINT "FK_MEMBER_TO_LIKES_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "PROJECTFUND" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_PROJECTFUND_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);

ALTER TABLE "PROJECTFUND" ADD CONSTRAINT "FK_PAYMENT_TO_PROJECTFUND_1" FOREIGN KEY (
	"PAYMENT_CODE"
)
REFERENCES "PAYMENT" (
	"PAYMENT_CODE"
);

ALTER TABLE "MES_ATTACHMENT" ADD CONSTRAINT "FK_MESSAGES_TO_MES_ATTACHMENT_1" FOREIGN KEY (
	"MESSAGE_CODE"
)
REFERENCES "MESSAGES" (
	"MESSAGE_CODE"
);

ALTER TABLE "NOTICE_MEDIA" ADD CONSTRAINT "FK_NOTICE_TO_NOTICE_MEDIA_1" FOREIGN KEY (
	"NOTICE_NO"
)
REFERENCES "NOTICE" (
	"NOTICE_NO"
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "FK_SIGNUP_TEMP_EMAIL_TO_MEMBER_1" FOREIGN KEY (
	"MEM_EMAIL"
)
REFERENCES "SIGNUP_TEMP_EMAIL" (
	"MEM_EMAIL"
);

ALTER TABLE "MESSAGES" ADD CONSTRAINT "FK_MESSAGEBOX_TO_MESSAGES_1" FOREIGN KEY (
	"BOX_TYPE"
)
REFERENCES "MESSAGEBOX" (
	"BOX_TYPE"
);

ALTER TABLE "MESSAGES" ADD CONSTRAINT "FK_MESSAGEBOX_TO_MESSAGES_2" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MESSAGEBOX" (
	"MEM_CODE"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "FK_MEMBER_TO_NOTICE_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "COMUNITY" ADD CONSTRAINT "FK_MEMBER_TO_COMUNITY_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "COM_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_COM_COMMENT_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "FUNDINGPROJECT" ADD CONSTRAINT "FK_FUNDRAISER_TO_FUNDINGPROJECT_1" FOREIGN KEY (
	"RAISER_CODE"
)
REFERENCES "FUNDRAISER" (
	"RAISER_CODE"
);

ALTER TABLE "PROJECT_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_PROJECT_COMMENT_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "PAYMENT" ADD CONSTRAINT "FK_MEMBER_TO_PAYMENT_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "APPROVAL_HISTORY" ADD CONSTRAINT "FK_PAYMENT_TO_APPROVAL_HISTORY_1" FOREIGN KEY (
	"PAYMENT_CODE"
)
REFERENCES "PAYMENT" (
	"PAYMENT_CODE"
);

ALTER TABLE "MEMBERSHIP" ADD CONSTRAINT "FK_MEMBER_TO_MEMBERSHIP_1" FOREIGN KEY (
	"MEM_CODE"
)
REFERENCES "MEMBER" (
	"MEM_CODE"
);

ALTER TABLE "INCOME_PROJECT" ADD CONSTRAINT "FK_FUNDINGPROJECT_TO_INCOME_PROJECT_1" FOREIGN KEY (
	"PROJECT_NO"
)
REFERENCES "FUNDINGPROJECT" (
	"PROJECT_NO"
);